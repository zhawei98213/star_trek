// Mocks generated by Mockito 5.4.6 from annotations
// in start_trek/test/features/learning/domain/usecases/get_learning_progress_usecase_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:start_trek/features/learning/domain/entities/learning_progress_entity.dart'
    as _i5;
import 'package:start_trek/features/learning/domain/entities/lesson_entity.dart'
    as _i4;
import 'package:start_trek/features/learning/domain/repositories/learning_repository.dart'
    as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [LearningRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockLearningRepository extends _i1.Mock
    implements _i2.LearningRepository {
  MockLearningRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<_i4.LessonEntity>> getLessons({
    _i4.AgeGroup? ageGroup,
    _i4.DifficultyLevel? difficulty,
    _i4.LessonType? type,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getLessons,
          [],
          {
            #ageGroup: ageGroup,
            #difficulty: difficulty,
            #type: type,
          },
        ),
        returnValue:
            _i3.Future<List<_i4.LessonEntity>>.value(<_i4.LessonEntity>[]),
      ) as _i3.Future<List<_i4.LessonEntity>>);

  @override
  _i3.Future<_i4.LessonEntity?> getLessonById(String? lessonId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getLessonById,
          [lessonId],
        ),
        returnValue: _i3.Future<_i4.LessonEntity?>.value(),
      ) as _i3.Future<_i4.LessonEntity?>);

  @override
  _i3.Future<List<_i4.LessonEntity>> getRecommendedLessons(
    String? userId, {
    int? limit = 5,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getRecommendedLessons,
          [userId],
          {#limit: limit},
        ),
        returnValue:
            _i3.Future<List<_i4.LessonEntity>>.value(<_i4.LessonEntity>[]),
      ) as _i3.Future<List<_i4.LessonEntity>>);

  @override
  _i3.Future<List<_i4.LessonEntity>> getRecentLessons(
    String? userId, {
    int? limit = 3,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getRecentLessons,
          [userId],
          {#limit: limit},
        ),
        returnValue:
            _i3.Future<List<_i4.LessonEntity>>.value(<_i4.LessonEntity>[]),
      ) as _i3.Future<List<_i4.LessonEntity>>);

  @override
  _i3.Future<List<_i4.LessonEntity>> searchLessons(
    String? query, {
    Map<String, dynamic>? filters,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchLessons,
          [query],
          {#filters: filters},
        ),
        returnValue:
            _i3.Future<List<_i4.LessonEntity>>.value(<_i4.LessonEntity>[]),
      ) as _i3.Future<List<_i4.LessonEntity>>);

  @override
  _i3.Future<void> updateLessonProgress(
    String? userId,
    String? lessonId,
    double? progress,
    _i4.LessonStatus? status, {
    int? score,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateLessonProgress,
          [
            userId,
            lessonId,
            progress,
            status,
          ],
          {#score: score},
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> completeLession(
    String? userId,
    String? lessonId,
    int? score,
    int? studyTime,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #completeLession,
          [
            userId,
            lessonId,
            score,
            studyTime,
          ],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<_i5.LearningProgressEntity?> getLearningProgress(String? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getLearningProgress,
          [userId],
        ),
        returnValue: _i3.Future<_i5.LearningProgressEntity?>.value(),
      ) as _i3.Future<_i5.LearningProgressEntity?>);

  @override
  _i3.Future<void> updateLearningProgress(
          _i5.LearningProgressEntity? progress) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateLearningProgress,
          [progress],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> addStudyTime(
    String? userId,
    int? studyTime,
    _i4.LessonType? lessonType,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addStudyTime,
          [
            userId,
            studyTime,
            lessonType,
          ],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> updateDailyGoal(
    String? userId,
    int? dailyGoal,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateDailyGoal,
          [
            userId,
            dailyGoal,
          ],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<_i5.DailyStudyRecord?> getDailyStudyRecord(
    String? userId,
    DateTime? date,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getDailyStudyRecord,
          [
            userId,
            date,
          ],
        ),
        returnValue: _i3.Future<_i5.DailyStudyRecord?>.value(),
      ) as _i3.Future<_i5.DailyStudyRecord?>);

  @override
  _i3.Future<List<_i5.DailyStudyRecord>> getWeeklyStudyRecords(
    String? userId,
    DateTime? startDate,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getWeeklyStudyRecords,
          [
            userId,
            startDate,
          ],
        ),
        returnValue: _i3.Future<List<_i5.DailyStudyRecord>>.value(
            <_i5.DailyStudyRecord>[]),
      ) as _i3.Future<List<_i5.DailyStudyRecord>>);

  @override
  _i3.Future<List<_i5.DailyStudyRecord>> getMonthlyStudyRecords(
    String? userId,
    int? year,
    int? month,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getMonthlyStudyRecords,
          [
            userId,
            year,
            month,
          ],
        ),
        returnValue: _i3.Future<List<_i5.DailyStudyRecord>>.value(
            <_i5.DailyStudyRecord>[]),
      ) as _i3.Future<List<_i5.DailyStudyRecord>>);

  @override
  _i3.Future<int> checkAndUpdateLevel(
    String? userId,
    int? totalPoints,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #checkAndUpdateLevel,
          [
            userId,
            totalPoints,
          ],
        ),
        returnValue: _i3.Future<int>.value(0),
      ) as _i3.Future<int>);

  @override
  _i3.Future<void> addPoints(
    String? userId,
    int? points,
    String? reason,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addPoints,
          [
            userId,
            points,
            reason,
          ],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<int> updateStreakDays(String? userId) => (super.noSuchMethod(
        Invocation.method(
          #updateStreakDays,
          [userId],
        ),
        returnValue: _i3.Future<int>.value(0),
      ) as _i3.Future<int>);

  @override
  _i3.Future<void> syncToCloud(String? userId) => (super.noSuchMethod(
        Invocation.method(
          #syncToCloud,
          [userId],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> syncFromCloud(String? userId) => (super.noSuchMethod(
        Invocation.method(
          #syncFromCloud,
          [userId],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> clearUserData(String? userId) => (super.noSuchMethod(
        Invocation.method(
          #clearUserData,
          [userId],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<Map<String, dynamic>> exportUserData(String? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #exportUserData,
          [userId],
        ),
        returnValue:
            _i3.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i3.Future<Map<String, dynamic>>);

  @override
  _i3.Future<void> importUserData(
    String? userId,
    Map<String, dynamic>? data,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #importUserData,
          [
            userId,
            data,
          ],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
}
