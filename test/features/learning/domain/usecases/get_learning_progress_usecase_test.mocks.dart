// Mocks generated by Mockito 5.4.6 from annotations
// in start_trek/test/features/learning/domain/usecases/get_learning_progress_usecase_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:dartz/dartz.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:start_trek/core/error/failures.dart' as _i5;
import 'package:start_trek/features/learning/domain/entities/learning_progress_entity.dart'
    as _i7;
import 'package:start_trek/features/learning/domain/entities/lesson_entity.dart'
    as _i6;
import 'package:start_trek/features/learning/domain/repositories/learning_repository.dart'
    as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [LearningRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockLearningRepository extends _i1.Mock
    implements _i3.LearningRepository {
  MockLearningRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i6.LessonEntity>>> getLessons({
    _i6.AgeGroup? ageGroup,
    _i6.DifficultyLevel? difficulty,
    _i6.LessonType? type,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getLessons,
          [],
          {
            #ageGroup: ageGroup,
            #difficulty: difficulty,
            #type: type,
          },
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.Failure, List<_i6.LessonEntity>>>.value(
                _FakeEither_0<_i5.Failure, List<_i6.LessonEntity>>(
          this,
          Invocation.method(
            #getLessons,
            [],
            {
              #ageGroup: ageGroup,
              #difficulty: difficulty,
              #type: type,
            },
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, List<_i6.LessonEntity>>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.LessonEntity>> getLessonById(
          String? lessonId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getLessonById,
          [lessonId],
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.Failure, _i6.LessonEntity>>.value(
                _FakeEither_0<_i5.Failure, _i6.LessonEntity>(
          this,
          Invocation.method(
            #getLessonById,
            [lessonId],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i6.LessonEntity>>);

  @override
  _i4.Future<
      _i2.Either<_i5.Failure, List<_i6.LessonEntity>>> getRecommendedLessons(
    String? userId, {
    int? limit = 5,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getRecommendedLessons,
          [userId],
          {#limit: limit},
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.Failure, List<_i6.LessonEntity>>>.value(
                _FakeEither_0<_i5.Failure, List<_i6.LessonEntity>>(
          this,
          Invocation.method(
            #getRecommendedLessons,
            [userId],
            {#limit: limit},
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, List<_i6.LessonEntity>>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i6.LessonEntity>>> getRecentLessons(
    String? userId, {
    int? limit = 3,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getRecentLessons,
          [userId],
          {#limit: limit},
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.Failure, List<_i6.LessonEntity>>>.value(
                _FakeEither_0<_i5.Failure, List<_i6.LessonEntity>>(
          this,
          Invocation.method(
            #getRecentLessons,
            [userId],
            {#limit: limit},
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, List<_i6.LessonEntity>>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i6.LessonEntity>>> searchLessons(
    String? query, {
    Map<String, dynamic>? filters,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchLessons,
          [query],
          {#filters: filters},
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.Failure, List<_i6.LessonEntity>>>.value(
                _FakeEither_0<_i5.Failure, List<_i6.LessonEntity>>(
          this,
          Invocation.method(
            #searchLessons,
            [query],
            {#filters: filters},
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, List<_i6.LessonEntity>>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i2.Unit>> updateLessonProgress(
    String? userId,
    String? lessonId,
    double? progress,
    _i6.LessonStatus? status, {
    int? score,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateLessonProgress,
          [
            userId,
            lessonId,
            progress,
            status,
          ],
          {#score: score},
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, _i2.Unit>>.value(
            _FakeEither_0<_i5.Failure, _i2.Unit>(
          this,
          Invocation.method(
            #updateLessonProgress,
            [
              userId,
              lessonId,
              progress,
              status,
            ],
            {#score: score},
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i2.Unit>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i2.Unit>> completeLession(
    String? userId,
    String? lessonId,
    int? score,
    int? studyTime,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #completeLession,
          [
            userId,
            lessonId,
            score,
            studyTime,
          ],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, _i2.Unit>>.value(
            _FakeEither_0<_i5.Failure, _i2.Unit>(
          this,
          Invocation.method(
            #completeLession,
            [
              userId,
              lessonId,
              score,
              studyTime,
            ],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i2.Unit>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i7.LearningProgressEntity>>
      getLearningProgress(String? userId) => (super.noSuchMethod(
            Invocation.method(
              #getLearningProgress,
              [userId],
            ),
            returnValue: _i4.Future<
                    _i2.Either<_i5.Failure, _i7.LearningProgressEntity>>.value(
                _FakeEither_0<_i5.Failure, _i7.LearningProgressEntity>(
              this,
              Invocation.method(
                #getLearningProgress,
                [userId],
              ),
            )),
          ) as _i4.Future<_i2.Either<_i5.Failure, _i7.LearningProgressEntity>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i2.Unit>> updateLearningProgress(
          _i7.LearningProgressEntity? progress) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateLearningProgress,
          [progress],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, _i2.Unit>>.value(
            _FakeEither_0<_i5.Failure, _i2.Unit>(
          this,
          Invocation.method(
            #updateLearningProgress,
            [progress],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i2.Unit>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i2.Unit>> addStudyTime(
    String? userId,
    int? studyTime,
    _i6.LessonType? lessonType,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addStudyTime,
          [
            userId,
            studyTime,
            lessonType,
          ],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, _i2.Unit>>.value(
            _FakeEither_0<_i5.Failure, _i2.Unit>(
          this,
          Invocation.method(
            #addStudyTime,
            [
              userId,
              studyTime,
              lessonType,
            ],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i2.Unit>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i2.Unit>> updateDailyGoal(
    String? userId,
    int? dailyGoal,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateDailyGoal,
          [
            userId,
            dailyGoal,
          ],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, _i2.Unit>>.value(
            _FakeEither_0<_i5.Failure, _i2.Unit>(
          this,
          Invocation.method(
            #updateDailyGoal,
            [
              userId,
              dailyGoal,
            ],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i2.Unit>>);

  @override
  _i4.Future<_i7.DailyStudyRecord?> getDailyStudyRecord(
    String? userId,
    DateTime? date,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getDailyStudyRecord,
          [
            userId,
            date,
          ],
        ),
        returnValue: _i4.Future<_i7.DailyStudyRecord?>.value(),
      ) as _i4.Future<_i7.DailyStudyRecord?>);

  @override
  _i4.Future<List<_i7.DailyStudyRecord>> getWeeklyStudyRecords(
    String? userId,
    DateTime? startDate,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getWeeklyStudyRecords,
          [
            userId,
            startDate,
          ],
        ),
        returnValue: _i4.Future<List<_i7.DailyStudyRecord>>.value(
            <_i7.DailyStudyRecord>[]),
      ) as _i4.Future<List<_i7.DailyStudyRecord>>);

  @override
  _i4.Future<List<_i7.DailyStudyRecord>> getMonthlyStudyRecords(
    String? userId,
    int? year,
    int? month,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getMonthlyStudyRecords,
          [
            userId,
            year,
            month,
          ],
        ),
        returnValue: _i4.Future<List<_i7.DailyStudyRecord>>.value(
            <_i7.DailyStudyRecord>[]),
      ) as _i4.Future<List<_i7.DailyStudyRecord>>);

  @override
  _i4.Future<int> checkAndUpdateLevel(
    String? userId,
    int? totalPoints,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #checkAndUpdateLevel,
          [
            userId,
            totalPoints,
          ],
        ),
        returnValue: _i4.Future<int>.value(0),
      ) as _i4.Future<int>);

  @override
  _i4.Future<void> addPoints(
    String? userId,
    int? points,
    String? reason,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addPoints,
          [
            userId,
            points,
            reason,
          ],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<int> updateStreakDays(String? userId) => (super.noSuchMethod(
        Invocation.method(
          #updateStreakDays,
          [userId],
        ),
        returnValue: _i4.Future<int>.value(0),
      ) as _i4.Future<int>);

  @override
  _i4.Future<void> syncToCloud(String? userId) => (super.noSuchMethod(
        Invocation.method(
          #syncToCloud,
          [userId],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> syncFromCloud(String? userId) => (super.noSuchMethod(
        Invocation.method(
          #syncFromCloud,
          [userId],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> clearUserData(String? userId) => (super.noSuchMethod(
        Invocation.method(
          #clearUserData,
          [userId],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<Map<String, dynamic>> exportUserData(String? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #exportUserData,
          [userId],
        ),
        returnValue:
            _i4.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i4.Future<Map<String, dynamic>>);

  @override
  _i4.Future<void> importUserData(
    String? userId,
    Map<String, dynamic>? data,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #importUserData,
          [
            userId,
            data,
          ],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<List<_i6.LessonEntity>> getAllLessons() => (super.noSuchMethod(
        Invocation.method(
          #getAllLessons,
          [],
        ),
        returnValue:
            _i4.Future<List<_i6.LessonEntity>>.value(<_i6.LessonEntity>[]),
      ) as _i4.Future<List<_i6.LessonEntity>>);

  @override
  _i4.Future<List<_i6.LessonEntity>> getCompletedLessons(String? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getCompletedLessons,
          [userId],
        ),
        returnValue:
            _i4.Future<List<_i6.LessonEntity>>.value(<_i6.LessonEntity>[]),
      ) as _i4.Future<List<_i6.LessonEntity>>);

  @override
  _i4.Future<int> getTotalLessonsCount() => (super.noSuchMethod(
        Invocation.method(
          #getTotalLessonsCount,
          [],
        ),
        returnValue: _i4.Future<int>.value(0),
      ) as _i4.Future<int>);

  @override
  _i4.Future<List<_i7.DailyStudyRecord>> getAllStudyRecords(String? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllStudyRecords,
          [userId],
        ),
        returnValue: _i4.Future<List<_i7.DailyStudyRecord>>.value(
            <_i7.DailyStudyRecord>[]),
      ) as _i4.Future<List<_i7.DailyStudyRecord>>);

  @override
  _i4.Future<List<_i7.DailyStudyRecord>> getStudyRecordsInRange(
    String? userId,
    DateTime? startDate,
    DateTime? endDate,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getStudyRecordsInRange,
          [
            userId,
            startDate,
            endDate,
          ],
        ),
        returnValue: _i4.Future<List<_i7.DailyStudyRecord>>.value(
            <_i7.DailyStudyRecord>[]),
      ) as _i4.Future<List<_i7.DailyStudyRecord>>);

  @override
  _i4.Future<void> unlockLessonsByTypeAndDifficulty(
    String? userId,
    _i6.LessonType? type,
    _i6.DifficultyLevel? difficulty,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #unlockLessonsByTypeAndDifficulty,
          [
            userId,
            type,
            difficulty,
          ],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
}
